#twibot

## 説明

Google App Engine/Python 上で動作する Twitter Bot です。

機能は以下の二つです。
 
- ツイートを投稿する
- リプライに対して返信する

ツイートする文章の内容は、以下の二つから選択することができます。

- マルコフ連鎖により自動生成した文章をツイート
- ファイルに書かれている文章をランダムにツイート

## 設定

config.ini.sample をコピーして、同一ディレクトリ内に config.ini という
名前のファイルを作成します。

### OAuth

config.ini の下記部分に OAuth の consumer_key 等を記述します。

    [oauth]
    consumer_key = 
    consumer_secret = 
    access_token = 
    access_token_secret = 

### ツイート間隔・リプライに反応する間隔

cron.yaml の下記部分で、15 となっているのがツイート間隔です。単位は分です。

    - description: tweet
      url: /tweet
      # ツイートの間隔
      schedule: every 15 minutes

この数字を変更することでツイートの間隔を変更できます。

cron.yaml の下記部分で、1 となっているのがリプライに反応する間隔です。
単位は分です。

    - description: reply
      url: /reply
      schedule: every 1 minutes

この数字を変更することでリプライに反応する間隔を変更できます。

### ツイート方法の選択

#### マルコフ連鎖による自動生成の場合(未実装)

マルコフ連鎖による文章自動生成を行うためには、解析元の文章が
必要となります。twibot では twilog (Twitter のログを収集するサービス）に
収集されているログを解析元の文章として使用します。

config.ini の下記部分で解析対象の id を指定します。

    [twilog]
    original_id = 

例えば、Twitter id:yono [](http://twitter.com/yono) を解析対象に指定する
場合は以下のように記述します。

    [twilog]
    original_id = yono

##### 一括解析

過去のログを一括で解析したい場合

##### 定期的な解析

定期的にログを解析したい場合

#### ファイルに書いた文を用いる場合

sentence.txt に書かれた文をランダムにツイートします。
文の区切り文字は % です（fortune と同様の形式）。
例を以下に示します。

    こんにちは
    %
    ねむい
    %
    あつい



